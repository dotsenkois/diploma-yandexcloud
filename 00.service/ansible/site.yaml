---
- name: Install and Configure remote service vm
  hosts: all
  pre_tasks:
    - name: Instale packages list
      become: true
      ansible.builtin.apt:
        pkg:
          - git
          - docker-compose
          - htop
          - docker.io
          - python3-pip
          - net-tools
          - unzip
          - zip
        update_cache: true

    - name: Instale ansible
      ansible.builtin.pip:
        name:
          - ansible
    - name: Dowload terraform.zip
      ansible.builtin.get_url:
        url: https://storage.yandexcloud.net/bucket-sa-distrib1/terraform_1.3.3_linux_amd64.zip
        dest: /tmp/terraform.zip
        mode: '0640'
    - name: Unarchive a terraform
      become: true
      ansible.builtin.unarchive:
        src: /tmp/terraform.zip
        dest: /usr/bin
        remote_src: true
    - name: Git clone diploma-yandexcloud
      ansible.builtin.git:
        repo: https://github.com/dotsenkois/diploma-yandexcloud.git
        dest: ~/diploma-yandexcloud
        version: latest
      register: diploma-yandexcloud
      changed_when: "'Cloning into' in diploma-yandexcloud.stdout"

    - name: Git clone diploma-web-app
      ansible.builtin.git:
        repo: https://github.com/dotsenkois/diploma-web-app.git
        dest: ~/diploma-web-app
        version: latest
      register: diploma-web-app
      changed_when: "'Cloning into' in diploma-web-app.stdout"
  tasks:
    - name: Copy private key to remote hosts
      ansible.builtin.copy:
        src: "~/.ssh/netology"
        dest: "~/.ssh/netology"
        mode: "600"
    - name: Copy public key to remote hosts
      ansible.builtin.copy:
        src: "~/.ssh/netology.pub"
        dest: "~/.ssh/netology.pub"
        mode: "600"

    - name: Echo YC_TOKEN
      ansible.builtin.shell:
        cmd: "echo $YC_TOKEN"
      register: YC_TOKEN
      changed_when: YC_TOKEN.rc != 0
      delegate_to: localhost

    - name: Echo YC_CLOUD_ID
      ansible.builtin.shell:
        cmd: "echo $YC_CLOUD_ID"
      register: YC_CLOUD_ID
      changed_when: YC_CLOUD_ID.rc != 0
      delegate_to: localhost

    - name: Set env YC_CLOUD_ID for YC
      ansible.builtin.shell:
        cmd: echo "export YC_CLOUD_ID={{ YC_CLOUD_ID.stdout }}" >> ~/.bashrc && cat ~/.bashrc | grep YC_CLOUD_ID
      environment:
        YC_CLOUD_ID: "{{ YC_CLOUD_ID.stdout }}"
      register: bashrc_YC_CLOUD_ID_added
      changed_when: "YC_CLOUD_ID.stdout in bashrc_YC_CLOUD_ID_added.stdout"

    - name: Set env YC_TOKEN for YC
      ansible.builtin.shell:
        cmd: echo "export YC_TOKEN={{ YC_TOKEN.stdout }}" >> ~/.bashrc && cat ~/.bashrc | grep YC_TOKEN
      environment:
        YC_TOKEN: "{{ YC_TOKEN.stdout }}"
      register: bashrc_YC_TOKEN_added
      changed_when: "YC_TOKEN.stdout in bashrc_YC_TOKEN_added.stdout"
