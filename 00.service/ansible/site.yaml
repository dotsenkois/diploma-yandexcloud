---
- name: Install and Configure remote service vm
  hosts: all
  tasks:
    - name: Copy private key to remote hosts
      ansible.builtin.copy:
        src: "~/.ssh/netology"
        dest: "~/.ssh/netology"
        mode: "600"
    - name: Copy public key to remote hosts
      ansible.builtin.copy:
        src: "~/.ssh/netology.pub"
        dest: "~/.ssh/netology.pub"
        mode: "600"
    - name: Copy ssh config
      ansible.builtin.copy:
        src: "./templates/config"
        dest: "~/.ssh/config"
        mode: "600"
    - name: Echo YC_TOKEN
      ansible.builtin.shell:
        cmd: "echo $YC_TOKEN"
      register: YC_TOKEN
      changed_when: YC_TOKEN.rc != 0
      delegate_to: localhost

    - name: Echo YC_CLOUD_ID
      ansible.builtin.shell:
        cmd: "echo $YC_CLOUD_ID"
      register: YC_CLOUD_ID
      changed_when: YC_CLOUD_ID.rc != 0
      delegate_to: localhost

    - name: Set env YC_CLOUD_ID for YC
      ansible.builtin.shell:
        cmd: echo "export YC_CLOUD_ID={{ YC_CLOUD_ID.stdout }}" >> ~/.bashrc && cat ~/.bashrc | grep YC_CLOUD_ID
      environment:
        YC_CLOUD_ID: "{{ YC_CLOUD_ID.stdout }}"
      register: bashrc_YC_CLOUD_ID_added
      changed_when: "YC_CLOUD_ID.stdout in bashrc_YC_CLOUD_ID_added.stdout"

    - name: Set env YC_TOKEN for YC
      ansible.builtin.shell:
        cmd: echo "export YC_TOKEN={{ YC_TOKEN.stdout }}" >> ~/.bashrc && cat ~/.bashrc | grep YC_TOKEN
      environment:
        YC_TOKEN: "{{ YC_TOKEN.stdout }}"
      register: bashrc_YC_TOKEN_added
      changed_when: "YC_TOKEN.stdout in bashrc_YC_TOKEN_added.stdout"


    - name: Clone a diploma-yandexcloud
      ansible.builtin.git:
        repo: git@github.com:dotsenkois/diploma-yandexcloud.git
        dest: ~/repo/diploma-yandexcloud/
        clone: true
        accept_hostkey: true
        key_file: ~/.ssh/netology
        version: main

    # - name: Run deploy
    #   ansible.builtin.command:
    #     cmd: ./repo/diploma-yandexcloud/entripoint.sh
    #   register: entripoint
    #   changed_when: "'YC' in entripoint.stdout"
