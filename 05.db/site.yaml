---
- name: Install PG
  hosts: db
  tasks:
    - name: get os release
      ansible.builtin.command:
        cmd: lsb_release -cs
      register: os_release

    - name: add PG repo
      ansible.builtin.apt_repository:
      repo: deb http://apt.postgresql.org/pub/repos/apt {{ os_release }}-pgdg main
      state: prestent








  # https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz
    - name: Set facts for Java 11 vars
      set_fact:
        java_home: "/opt/jdk/{{ java_jdk_version }}"
      tags: java
    # - name: Upload .tar.gz file containing binaries from local storage
    #   copy:
    #     src: "{{ java_oracle_jdk_package }}"
    #     dest: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
    #   register: download_java_binaries
    #   until: download_java_binaries is succeeded
    #   tags: java
    - name: download_java
      get_url:
        url: "https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz"
        dest: "/tmp/jdk-17_linux-x64_bin.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_download_java_binaries
      until: get_download_java_binaries is succeeded
      tags: java      
    - name: Ensure installation dir exists
      become: true
      file:
        state: directory
        path: "{{ java_home }}"
      tags: java
    # - shell: gunzip  jdk-17_linux-x64_bin.tar.gz  
    - name: Extract java in the installation directory
      become: true
      unarchive:
        copy: false
        src: "/tmp/jdk-17_linux-x64_bin.tar.gz"
        dest: "{{ java_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ java_home }}/bin/java"
      tags:
        - java
    - name: Export environment variables
      become: true
      template:
        src: jdk.sh.j2
        dest: /etc/profile.d/jdk.sh
      tags: java
- name: Install Elasticsearch
  hosts: elasticsearch
  tasks:
    - name: Upload tar.gz Elasticsearch from remote URL
      get_url:
        url: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        dest: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_elastic
      until: get_elastic is succeeded
      tags: elastic
    - name: Create directrory for Elasticsearch
      become: true
      file:
        state: directory
        path: "{{ elastic_home }}"
      tags: elastic
    - name: Extract Elasticsearch in the installation directory
      become: true
      unarchive:
        copy: false
        src: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        dest: "{{ elastic_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ elastic_home }}/bin/elasticsearch"
      tags:
        - elastic
    - name: Set environment Elastic
      become: true
      template:
        src: templates/elk.sh.j2
        dest: /etc/profile.d/elk.sh
      tags: elastic
- name: Install Kibana
  hosts: kibana
  tasks:
    - name: Download tar.gz Kibana from remote URL 
      get_url:
        url: "https://artifacts.elastic.co/downloads/kibana/kibana-8.0.0-linux-x86_64.tar.gz" #"https://artifacts.elastic.co/downloads/kibana/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
        dest: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_kibana
      until: get_kibana is succeeded
      tags: kibana
    - name: Create directrory for kibana
      become: true
      file:
        state: directory
        path: "{{ kibana_home }}"
      tags: kibana
    - name: Extract kibana in the installation directory
      become: true
      unarchive:
        copy: false
        src: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
        dest: "{{ kibana_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ kibana_home }}/bin/kibana"
      tags:
        - kibana
    - name: Set environment Kibana
      become: true
      template:
        src: templates/kib.sh.j2
        dest: /etc/profile.d/kib.sh
      tags: kibana
